=bootstrap_form_for(policy, inline_errors: false, label_errors: false, class: 'policy-form') do |f|
  .row
    .col-xs-12
      = f.select :client_id, options_for_select(@hints.collect{|h| [h[:hint], h[:id]]},
          (policy.client.id if policy.client.present?)),
          {include_blank: (true unless policy.client.present?)}, disabled: read_mode?
    .col-sm-6
      = f.select :group_id, options_from_collection_for_select(@groups, 'id', 'name', 
          (policy.group.id if policy.group.present?)), 
          {include_blank: (true unless policy.group.present?)}, disabled: read_mode?
    .col-sm-6
      = f.select :items, options_from_collection_for_select(@items, 'id', 'name', 
          (policy.items.map{|i| i.id})),
          {include_blank: (true unless policy.group.present?)}, disabled: !edit_mode?, multiple: 'multiple'
    .col-sm-6
      = f.text_field :number, disabled: read_mode?
    .col-sm-6
      = f.text_field :sign_date, value: Date.today.strftime('%d-%m-%Y'), icon: 'calendar', disabled: read_mode?
    .col-sm-6
      = f.text_field :begin_date, value: Date.tomorrow.strftime('%d-%m-%Y'), icon: 'calendar', disabled: read_mode?
    .col-sm-6
      = f.text_field :expire_date, value: Date.today.next_year.strftime('%d-%m-%Y'), icon: 'calendar', disabled: read_mode?
    .col-sm-4
      = f.text_field :sum, disabled: read_mode?
    .col-sm-4
      = f.text_field :contribution, disabled: read_mode?, class: 'generate-installments'
    .col-sm-4
      = f.number_field(:inst, in: 1.0..20.0, step: 1, class: 'form-control generate-installments', value: ((@installments.count!=0)? @installments.count : 1), disabled: read_mode?)
    .col-sm-12
      %table.table.table-striped#installments
        %thead
          %th
            \#
          %th
            = t 'installments.amount'
          %th
            = t 'installments.pay_date'
          %th
            = t 'installments.paid'
        %tbody
          -@installments.each_with_index do |inst, index|
            %tr
              %td
                = index+1
              %td
                = inst.amount
              %td
                = inst.pay_date.strftime('%d-%m-%Y')
              %td{"data-override" => inst.paid.to_s}
                = check_box_tag "paid_#{index}",nil, inst.paid, class: 'paid', disabled: read_mode?
    .col-sm-12
      = f.text_area :comments, disabled: read_mode?
    -unless read_mode?
      .col-sm-2.pull-right
        =f.submit t('helpers.save'), class: 'btn-block save-policy', icon: 'ok'
      .col-sm-2.pull-right
        = create_button t('helpers.cancel'), material_policies_path, class: 'btn-block', icon: 'times'